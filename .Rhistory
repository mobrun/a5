vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:56, "E", sep = ""))
# var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
View(counties_race)
group_name <- "group(B08113)"
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
# var_name <- paste("group(B08113",LETTERS[i],")", sep = "")
var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B08113",LETTERS[i], sep = "")\
group_name <- "group(B08113)"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:56, "E", sep = ""))
# var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
# var_name <- paste("group(B08113",LETTERS[i],")", sep = "")
var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B08113",LETTERS[i], sep = "")\
group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:56, "E", sep = ""))
# var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
# var_name <- paste("group(B08113",LETTERS[i],")", sep = "")
var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B08113",LETTERS[i], sep = "")
group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:56, "E", sep = ""))
# var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
View(by_race)
View(percents)
View(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) print(row_i) return(row_i - percents[1,])))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) print(row_i) return(row_i) - percents[1,])))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i)  return(row_i - percents[1,])))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) print(row_i)  return(row_i - percents[1,])))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) { print(row_i)  return(row_i - percents[1,])}))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) {   return(row_i - percents[1,])}))
View(skew)
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
percents <- t(apply(by_race, 1, function(row_i) {return(row_i/sum(row_i))}))
percents <- t(apply(by_race, 1, function(row_i) {prtin(row_i) return(row_i/sum(row_i))}))
percents <- t(apply(by_race, 1, function(row_i) {print(row_i) return(row_i/sum(row_i))}))
# row_i/sum(row_i)
percents <- t(apply(by_race, 1, function(row_i) return(row_i)))
#
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
#
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
#
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B19001",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B19001",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:17, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
num_cats <- 9
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B19001",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B19001",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:17, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B19001",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B19001",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:17, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B11001",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B11001",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B08105",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B08105",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:7, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B12007",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B12007",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:2, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
i = 1
# First group - tk
var_name <- paste("group(B12007",LETTERS[i],")", sep = "")
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
rm(list = ls())
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(censusapi)
library(dplyr)
library(ggplot2)
library(tidyr)
# Chunk 3
Sys.setenv(CENSUS_KEY="bf1905599ade12a84a1e2fd8c22103d87b5269f4")
# Chunk 4
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B12007",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B12007",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:2, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B19001",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B19001",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:17, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
rm(list = ls())
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(censusapi)
library(dplyr)
library(ggplot2)
library(tidyr)
# Chunk 3
Sys.setenv(CENSUS_KEY="bf1905599ade12a84a1e2fd8c22103d87b5269f4")
# Chunk 4
num_cats <- 7
# num_tiers <- nrow(bay_area)
groups <- vector("list", num_cats)
# var_groups <- c()
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B19001",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
# tk
group_name <- paste("B19001",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:17, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
"E" %in% "EA"
"E" %in% c("E","A")
county <- "001,013,041,055,075,081,085,095,097"
# Enter the number of categories here.
num_cats <- 7
groups <- vector("list", num_cats)
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B19001",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = paste("county:",county, sep = ""), regionin = "state:06")
# tk
group_name <- paste("B19001",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:17, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
library(censusapi)
library(dplyr)
library(ggplot2)
library(tidyr)
Sys.setenv(CENSUS_KEY="bf1905599ade12a84a1e2fd8c22103d87b5269f4")
county <- "001,013,041,055,075,081,085,095,097"
# Enter the number of categories here.
num_cats <- 7
groups <- vector("list", num_cats)
for (i in 1:num_cats) {
# First group - tk
var_name <- paste("group(B19001",LETTERS[i],")", sep = "")
# var_name <- "group(B08113)"
counties_race <- getCensus(name = "acs/acs5", vintage = 2016, vars = c("NAME",var_name), region = paste("county:",county, sep = ""), regionin = "state:06")
# tk
group_name <- paste("B19001",LETTERS[i], sep = "")
# group_name <- "B08113"
# Need to adjust based on number of variables of interest.
# , paste(group_name,"_0", 10:17, "E", sep = "")
vars_of_int_loop <- c(paste(group_name,"_00", 1:9, "E", sep = ""), paste(group_name,"_0", 10:17, "E", sep = ""))
var_name <- paste("estimate", LETTERS[i], sep = "_")
groups[[i]] <- select(counties_race,c("state","county", "NAME", vars_of_int_loop)) %>% gather(variable, value, -c("state","county", "NAME")) %>% group_by(variable) %>% summarise("estimate" = sum(value)) %>% select(estimate)
}
by_race <- do.call(cbind, groups)
num_tiers <- nrow(by_race)
percents <- t(apply(by_race, 1, function(row_i) return(row_i/sum(row_i))))
# Next is each entry subtracted from the first row.
# We're telling R which row we don't want.
skew <- t(apply(percents[-1, ], 1, function(row_i) return(row_i - percents[1,])))
final_skew <- matrix(NA, ncol = ncol(skew), nrow = nrow(skew))
# Each entry of next is skew entry times sum from corresponding bracket in by race divided by total in by race.
for (j in 1:(num_tiers-1)){
final_skew[j,] <- abs(skew[j,]*sum(sum(by_race[(j+1),])/sum(by_race[1,])))
}
sum(final_skew)*100/2
